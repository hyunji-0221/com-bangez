plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.bangez'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //MongoDB Reactive
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    //Lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    //JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.5'

    //Log4j
    implementation 'org.apache.logging.log4j:log4j-api'
    implementation 'org.apache.logging.log4j:log4j-core'

    //Swagger
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation group: 'io.swagger', name: 'swagger-annotations', version: '1.6.14'

    //Config (추가해야 8080 에러가 안남)
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
