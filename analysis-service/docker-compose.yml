version: "3.2"
services:
  mongo-db:
    container_name: mongodb-container
    image: mongo
    volumes:
      - ~/docker/mongo/db/etc/mongo/conf.d:/etc/mongo/conf.d:ro
      - ~/docker/mongo/db/var/lib/mongo:/var/lib/mongo
      - ~/docker/mongo/db/var/log/mongo:/var/log/mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=mongo_db
    restart: always
    ports:
      - "27017:27017"
    networks:
      - rootnet
#  app1:
#    container_name: mongodb-application-container
#    build: .
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://mongodb-container:27017/mongo_db
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: root
#    ports:
#      - "8084:8080"
#    depends_on:
#      - mongo-db
#    networks:
#      - "rootnet"

  mysql-db:
    container_name: mysql-container
    image: mysql:8.0.22
    volumes:
      - ~/docker/mysql/db/etc/mysql/conf.d:/etc/mysql/conf.d:ro
      - ~/docker/mysql/db/var/lib/mysql:/var/lib/mysql
      - ~/docker/mysql/db/var/log/mysql:/var/log/mysql
    environment:
      - MYSQL_DATABASE=bangez_db
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ROOT_HOST=%
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    restart: always
    ports:
      - "3306:3306"
    networks:
      - test_env
#  app2:
#    container_name: mysql-application-container
#    build: .
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/bangez_db
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: root
#    ports:
#      - "8084:8080"
#    depends_on:
#      - mysql-db
#    networks:
#      - test_env

networks:
  rootnet:
    driver: bridge
  test_env:
    driver: bridge




